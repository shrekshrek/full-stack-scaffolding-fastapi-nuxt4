# This file serves as a template for the main .env file.
# Copy this file to .env and fill in the appropriate values.
# IMPORTANT: The .env file should NOT be committed to version control.

# --- PostgreSQL Database ---
# These are used by the postgres_db service in docker-compose.yml
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=fastapi_db

# --- Backend Application (FastAPI) ---
# This is the connection string used by the backend application to connect to the database.
# For local development with Docker, the host is the service name 'postgres_db'.
DATABASE_URL=postgresql+psycopg://postgres:postgres@postgres_db:5432/fastapi_db

# --- Redis (General Purpose) ---
# Used for application-level caching, rate limiting, etc.
# For local development with Docker, the host is the service name 'redis'.
REDIS_URL=redis://redis:6379/1

# --- Celery (Task Queue) ---
# Connection string for Redis, used as the message broker and result backend.
# Note: It's good practice to use a different Redis DB for Celery (e.g., DB 0)
# from the one used for general caching (e.g., DB 1).
# For local development with Docker, the host is the service name 'redis'.
CELERY_BROKER_URL=redis://redis:6379/0
CELERY_RESULT_BACKEND=redis://redis:6379/0

# --- Security ---
# A strong, unique secret key for signing JWTs.
# You can generate one with: openssl rand -hex 32
SECRET_KEY=a_very_secret_key_that_should_be_changed

# Token expiration times (in minutes)
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_MINUTES=10080 # 7 days

# --- Email Settings ---
# For local development, these point to the MailHog service.
SMTP_HOST=mailhog
SMTP_PORT=1025
SMTP_USER=
SMTP_PASSWORD=
EMAILS_FROM_EMAIL=your_email@example.com
EMAILS_FROM_NAME="Your App Name"

# --- Project Settings ---
PROJECT_NAME="Full Stack App"
BACKEND_CORS_ORIGINS='["http://localhost:3000"]'

# --- Frontend (Nuxt Auth) ---
# Secret for @sidebase/nuxt-auth.
# NOTE: In a robust architecture, JWT generation should be handled exclusively by the backend.
# This variable is required for the current setup but should be considered for deprecation
# in favor of a unified backend-driven authentication strategy.
NUXT_SECRET=your-super-secret-jwt-key-change-this-in-production
